@mixin widget($radii: $widget_radius){
    border-radius: $radii;
    color: $fg_color;
    background-color: $widget_bg;
    box-shadow: inset 0 0 0 $border_width $border_color;
}

@mixin button_focus() {
    box-shadow: inset 0 0 0 $border_width $accent;
    background-color: $hover;
    color: $hover_fg;
}

@mixin button_hover() {
    box-shadow: inset 0 0 0 $border_width $border_color;
    background-color: $hover;
    color: $hover_fg;
}

@mixin button_active() {
    box-shadow: inset 0 0 0 $border_width $border_color;
    background-color: $accent;
    color: $accent_fg;
}

@mixin button($flat: false, $reactive: true, $radii: $radii, $focusable: true){
    transition: $transition;
    border-radius: $radii;
    color: $fg_color;
    @if $flat{
        background-color: transparent;
        background-image: none;
        box-shadow: none;
    }@else{
        background-color: $button_bg;
        box-shadow: inset 0 0 0 $border_width $border_color;
    }
    @if $reactive{
        @if $focusable {
            &:focus{
                @include button_focus;
            }
        }
        &:hover{
            @include button_hover;
        }
        &:active{
            @include button_active;
        }
    }
}

@mixin floating_widget($shadow: true, $shadow_width: $wm_gaps/2, $padding: $popover_padding){
    @if $shadow {
        box-shadow: 0 0 $shadow_width 0 rgba(0,0,0,0.6),
                    inset 0 0 0 $border_width $popover_border_color;
    } @else {
        box-shadow: inset 0 0 0 $border_width $popover_border_color;
    }
    border-radius: $popover_radius;
    margin: $wm_gaps;
    background-color: $bg_color;
    color: $fg_color;
    padding: $padding;
}

@mixin slider($width: .4em, $color: $accent, $slider: true, $focusable: true){
    trough{
        transition: $transition;
        border-radius: $button_radius;
        border: $border;
        background-color: $button_bg;
        min-height: $width;
        min-width:  $width;
        highlight, progress{
            border-radius: $button_radius;
            background-color: $color;
            min-height: $width;
            min-width:  $width;
            @if $slider {
                border-radius: $button_radius 0 0 $button_radius;
            }
        }
        slider{
            @if $slider{
                background-color: $fg_color;
                border-radius: $button_radius;
                border: $border;
                min-height: $width;
                min-width:  $width;
            }
        }
    }
    &:hover trough{
        background-color: $hover;
    }
    @if $focusable {
        trough:focus{
            background-color: $hover;
            box-shadow: inset 0 0 0 $border_width $accent;
            highlight, progress{
                background-color: transparentize($color, 0.3);
            }
        }
    }
}

@mixin shader($radius: $radii, $width: 3em){
    border-radius: $radius*0.92;
    @if $theme == 'dark' {
        box-shadow: inset 0 0 $width $width/3 transparentize($bg_color, 0.1);
    }
    @if $theme == 'light' {
        background-color: transparentize($bg_color, 0.5);
    }
}

@mixin tooltip{
    > * > *{
        background-color: $bg_color;
        border-radius: $button_radius;
        border: $border_width solid $popover_border_color;
        color: $fg_color;
        padding: 8px;
        margin: 4px;
        box-shadow: 0 0 3px 0 rgba(0,0,0,0.4);
    }
}

@mixin scrollbar{
    scrollbar.vertical{
        slider{
            background: $widget_bg;
            border-radius: $radii;
            min-width: .6em;
            min-height: 2em;
            transition: $transition;
            &:hover {
                background-color: $fg_color;
            }
        }
    }
    overshoot{
        border-radius: $radii;
        &.top{
            background: linear-gradient(transparentize($bg_color, 0.6), transparent);
        }
        &.bottom{
            background: linear-gradient(transparent,transparentize($bg_color, 0.6));
        }
    }
}
